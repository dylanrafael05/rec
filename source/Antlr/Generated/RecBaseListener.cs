//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from source/Antlr/Rec.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IRecListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class RecBaseListener : IRecListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] RecParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] RecParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.topLevelStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTopLevelStatement([NotNull] RecParser.TopLevelStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.topLevelStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTopLevelStatement([NotNull] RecParser.TopLevelStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.asStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAsStatement([NotNull] RecParser.AsStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.asStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAsStatement([NotNull] RecParser.AsStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.simpleScopedIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimpleScopedIdentifier([NotNull] RecParser.SimpleScopedIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.simpleScopedIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimpleScopedIdentifier([NotNull] RecParser.SimpleScopedIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.modStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModStatement([NotNull] RecParser.ModStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.modStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModStatement([NotNull] RecParser.ModStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.useStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUseStatement([NotNull] RecParser.UseStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.useStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUseStatement([NotNull] RecParser.UseStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.templateHeader"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTemplateHeader([NotNull] RecParser.TemplateHeaderContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.templateHeader"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTemplateHeader([NotNull] RecParser.TemplateHeaderContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.structFieldDefine"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructFieldDefine([NotNull] RecParser.StructFieldDefineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.structFieldDefine"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructFieldDefine([NotNull] RecParser.StructFieldDefineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.structDefine"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructDefine([NotNull] RecParser.StructDefineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.structDefine"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructDefine([NotNull] RecParser.StructDefineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.fnArgumentDefine"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFnArgumentDefine([NotNull] RecParser.FnArgumentDefineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.fnArgumentDefine"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFnArgumentDefine([NotNull] RecParser.FnArgumentDefineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.fnDefine"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFnDefine([NotNull] RecParser.FnDefineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.fnDefine"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFnDefine([NotNull] RecParser.FnDefineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.aliasDefine"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAliasDefine([NotNull] RecParser.AliasDefineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.aliasDefine"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAliasDefine([NotNull] RecParser.AliasDefineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] RecParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] RecParser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] RecParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] RecParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.returnStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStmt([NotNull] RecParser.ReturnStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.returnStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStmt([NotNull] RecParser.ReturnStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.deferStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeferStmt([NotNull] RecParser.DeferStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.deferStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeferStmt([NotNull] RecParser.DeferStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.ifStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStmt([NotNull] RecParser.IfStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.ifStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStmt([NotNull] RecParser.IfStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.ifTail"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfTail([NotNull] RecParser.IfTailContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.ifTail"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfTail([NotNull] RecParser.IfTailContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.whileStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileStmt([NotNull] RecParser.WhileStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.whileStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileStmt([NotNull] RecParser.WhileStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.assignStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignStmt([NotNull] RecParser.AssignStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.assignStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignStmt([NotNull] RecParser.AssignStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.letExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLetExpr([NotNull] RecParser.LetExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.letExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLetExpr([NotNull] RecParser.LetExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.letStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLetStmt([NotNull] RecParser.LetStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.letStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLetStmt([NotNull] RecParser.LetStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.typenameFnArgs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypenameFnArgs([NotNull] RecParser.TypenameFnArgsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.typenameFnArgs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypenameFnArgs([NotNull] RecParser.TypenameFnArgsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>TypenameSingle</c>
	/// labeled alternative in <see cref="RecParser.typename"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypenameSingle([NotNull] RecParser.TypenameSingleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>TypenameSingle</c>
	/// labeled alternative in <see cref="RecParser.typename"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypenameSingle([NotNull] RecParser.TypenameSingleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>TypenameWrapped</c>
	/// labeled alternative in <see cref="RecParser.typename"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypenameWrapped([NotNull] RecParser.TypenameWrappedContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>TypenameWrapped</c>
	/// labeled alternative in <see cref="RecParser.typename"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypenameWrapped([NotNull] RecParser.TypenameWrappedContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>TypenameGeneric</c>
	/// labeled alternative in <see cref="RecParser.typename"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypenameGeneric([NotNull] RecParser.TypenameGenericContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>TypenameGeneric</c>
	/// labeled alternative in <see cref="RecParser.typename"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypenameGeneric([NotNull] RecParser.TypenameGenericContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>TypenamePointer</c>
	/// labeled alternative in <see cref="RecParser.typename"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypenamePointer([NotNull] RecParser.TypenamePointerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>TypenamePointer</c>
	/// labeled alternative in <see cref="RecParser.typename"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypenamePointer([NotNull] RecParser.TypenamePointerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>TypenameArray</c>
	/// labeled alternative in <see cref="RecParser.typename"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypenameArray([NotNull] RecParser.TypenameArrayContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>TypenameArray</c>
	/// labeled alternative in <see cref="RecParser.typename"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypenameArray([NotNull] RecParser.TypenameArrayContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>TypenameFn</c>
	/// labeled alternative in <see cref="RecParser.typename"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypenameFn([NotNull] RecParser.TypenameFnContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>TypenameFn</c>
	/// labeled alternative in <see cref="RecParser.typename"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypenameFn([NotNull] RecParser.TypenameFnContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr([NotNull] RecParser.ExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr([NotNull] RecParser.ExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>AddExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddExpression([NotNull] RecParser.AddExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AddExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddExpression([NotNull] RecParser.AddExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>LogicExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicExpression([NotNull] RecParser.LogicExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>LogicExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicExpression([NotNull] RecParser.LogicExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>MemoryExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMemoryExpression([NotNull] RecParser.MemoryExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MemoryExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMemoryExpression([NotNull] RecParser.MemoryExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>UnaryExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryExpression([NotNull] RecParser.UnaryExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>UnaryExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryExpression([NotNull] RecParser.UnaryExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CastExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCastExpression([NotNull] RecParser.CastExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CastExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCastExpression([NotNull] RecParser.CastExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CompareExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompareExpression([NotNull] RecParser.CompareExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CompareExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompareExpression([NotNull] RecParser.CompareExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>MulExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMulExpression([NotNull] RecParser.MulExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MulExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMulExpression([NotNull] RecParser.MulExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>BitwiseExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBitwiseExpression([NotNull] RecParser.BitwiseExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>BitwiseExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBitwiseExpression([NotNull] RecParser.BitwiseExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.castExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCastExpr([NotNull] RecParser.CastExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.castExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCastExpr([NotNull] RecParser.CastExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.explicitTemplateInstatiation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExplicitTemplateInstatiation([NotNull] RecParser.ExplicitTemplateInstatiationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.explicitTemplateInstatiation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExplicitTemplateInstatiation([NotNull] RecParser.ExplicitTemplateInstatiationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.callExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCallExpr([NotNull] RecParser.CallExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.callExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCallExpr([NotNull] RecParser.CallExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.structExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructExpr([NotNull] RecParser.StructExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.structExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructExpr([NotNull] RecParser.StructExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.structExprAssign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructExprAssign([NotNull] RecParser.StructExprAssignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.structExprAssign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructExprAssign([NotNull] RecParser.StructExprAssignContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.dotComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDotComponent([NotNull] RecParser.DotComponentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.dotComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDotComponent([NotNull] RecParser.DotComponentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.dotExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDotExpr([NotNull] RecParser.DotExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.dotExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDotExpr([NotNull] RecParser.DotExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.termExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTermExpr([NotNull] RecParser.TermExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.termExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTermExpr([NotNull] RecParser.TermExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteral([NotNull] RecParser.LiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteral([NotNull] RecParser.LiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.boolLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolLiteral([NotNull] RecParser.BoolLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.boolLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolLiteral([NotNull] RecParser.BoolLiteralContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
