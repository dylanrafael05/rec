//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from source/Antlr/Rec.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="RecParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface IRecVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="RecParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] RecParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RecParser.topLevelStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTopLevelStatement([NotNull] RecParser.TopLevelStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RecParser.asStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAsStatement([NotNull] RecParser.AsStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RecParser.simpleScopedIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimpleScopedIdentifier([NotNull] RecParser.SimpleScopedIdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RecParser.modStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitModStatement([NotNull] RecParser.ModStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RecParser.useStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUseStatement([NotNull] RecParser.UseStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RecParser.templateHeader"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTemplateHeader([NotNull] RecParser.TemplateHeaderContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RecParser.structFieldDefine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructFieldDefine([NotNull] RecParser.StructFieldDefineContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RecParser.structDefine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructDefine([NotNull] RecParser.StructDefineContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RecParser.fnArgumentDefine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFnArgumentDefine([NotNull] RecParser.FnArgumentDefineContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RecParser.fnDefine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFnDefine([NotNull] RecParser.FnDefineContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RecParser.aliasDefine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAliasDefine([NotNull] RecParser.AliasDefineContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RecParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] RecParser.BlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RecParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] RecParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RecParser.returnStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStmt([NotNull] RecParser.ReturnStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RecParser.deferStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeferStmt([NotNull] RecParser.DeferStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RecParser.ifStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStmt([NotNull] RecParser.IfStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RecParser.ifTail"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfTail([NotNull] RecParser.IfTailContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RecParser.whileStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStmt([NotNull] RecParser.WhileStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RecParser.assignStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignStmt([NotNull] RecParser.AssignStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RecParser.letExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLetExpr([NotNull] RecParser.LetExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RecParser.letStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLetStmt([NotNull] RecParser.LetStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RecParser.typenameFnArgs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypenameFnArgs([NotNull] RecParser.TypenameFnArgsContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TypenameSingle</c>
	/// labeled alternative in <see cref="RecParser.typename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypenameSingle([NotNull] RecParser.TypenameSingleContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TypenameWrapped</c>
	/// labeled alternative in <see cref="RecParser.typename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypenameWrapped([NotNull] RecParser.TypenameWrappedContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TypenameGeneric</c>
	/// labeled alternative in <see cref="RecParser.typename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypenameGeneric([NotNull] RecParser.TypenameGenericContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TypenamePointer</c>
	/// labeled alternative in <see cref="RecParser.typename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypenamePointer([NotNull] RecParser.TypenamePointerContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TypenameArray</c>
	/// labeled alternative in <see cref="RecParser.typename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypenameArray([NotNull] RecParser.TypenameArrayContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TypenameFn</c>
	/// labeled alternative in <see cref="RecParser.typename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypenameFn([NotNull] RecParser.TypenameFnContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RecParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr([NotNull] RecParser.ExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AddExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddExpression([NotNull] RecParser.AddExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>LogicExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicExpression([NotNull] RecParser.LogicExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>MemoryExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMemoryExpression([NotNull] RecParser.MemoryExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>UnaryExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryExpression([NotNull] RecParser.UnaryExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>CastExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCastExpression([NotNull] RecParser.CastExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>CompareExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompareExpression([NotNull] RecParser.CompareExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>MulExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMulExpression([NotNull] RecParser.MulExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BitwiseExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitwiseExpression([NotNull] RecParser.BitwiseExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RecParser.castExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCastExpr([NotNull] RecParser.CastExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RecParser.explicitTemplateInstatiation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExplicitTemplateInstatiation([NotNull] RecParser.ExplicitTemplateInstatiationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RecParser.callExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCallExpr([NotNull] RecParser.CallExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RecParser.structExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructExpr([NotNull] RecParser.StructExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RecParser.structExprAssign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructExprAssign([NotNull] RecParser.StructExprAssignContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RecParser.dotComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDotComponent([NotNull] RecParser.DotComponentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RecParser.dotExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDotExpr([NotNull] RecParser.DotExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RecParser.termExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTermExpr([NotNull] RecParser.TermExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RecParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteral([NotNull] RecParser.LiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RecParser.boolLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolLiteral([NotNull] RecParser.BoolLiteralContext context);
}
