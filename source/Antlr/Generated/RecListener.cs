//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from source/Antlr/Rec.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="RecParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface IRecListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] RecParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] RecParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.topLevelStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTopLevelStatement([NotNull] RecParser.TopLevelStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.topLevelStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTopLevelStatement([NotNull] RecParser.TopLevelStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.asStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAsStatement([NotNull] RecParser.AsStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.asStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAsStatement([NotNull] RecParser.AsStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.modStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModStatement([NotNull] RecParser.ModStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.modStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModStatement([NotNull] RecParser.ModStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.useStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUseStatement([NotNull] RecParser.UseStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.useStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUseStatement([NotNull] RecParser.UseStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.templateHeader"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTemplateHeader([NotNull] RecParser.TemplateHeaderContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.templateHeader"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTemplateHeader([NotNull] RecParser.TemplateHeaderContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.structFieldDefine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStructFieldDefine([NotNull] RecParser.StructFieldDefineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.structFieldDefine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStructFieldDefine([NotNull] RecParser.StructFieldDefineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.structDefine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStructDefine([NotNull] RecParser.StructDefineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.structDefine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStructDefine([NotNull] RecParser.StructDefineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.fnArgumentDefine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFnArgumentDefine([NotNull] RecParser.FnArgumentDefineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.fnArgumentDefine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFnArgumentDefine([NotNull] RecParser.FnArgumentDefineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.fnDefine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFnDefine([NotNull] RecParser.FnDefineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.fnDefine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFnDefine([NotNull] RecParser.FnDefineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.aliasDefine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAliasDefine([NotNull] RecParser.AliasDefineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.aliasDefine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAliasDefine([NotNull] RecParser.AliasDefineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] RecParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] RecParser.BlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] RecParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] RecParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.returnStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStmt([NotNull] RecParser.ReturnStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.returnStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStmt([NotNull] RecParser.ReturnStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.deferStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeferStmt([NotNull] RecParser.DeferStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.deferStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeferStmt([NotNull] RecParser.DeferStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.ifStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStmt([NotNull] RecParser.IfStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.ifStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStmt([NotNull] RecParser.IfStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.ifTail"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfTail([NotNull] RecParser.IfTailContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.ifTail"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfTail([NotNull] RecParser.IfTailContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.whileStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileStmt([NotNull] RecParser.WhileStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.whileStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileStmt([NotNull] RecParser.WhileStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.assignStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignStmt([NotNull] RecParser.AssignStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.assignStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignStmt([NotNull] RecParser.AssignStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.letExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLetExpr([NotNull] RecParser.LetExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.letExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLetExpr([NotNull] RecParser.LetExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.letStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLetStmt([NotNull] RecParser.LetStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.letStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLetStmt([NotNull] RecParser.LetStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.typenameFnArgs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypenameFnArgs([NotNull] RecParser.TypenameFnArgsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.typenameFnArgs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypenameFnArgs([NotNull] RecParser.TypenameFnArgsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>TypenameSingle</c>
	/// labeled alternative in <see cref="RecParser.typename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypenameSingle([NotNull] RecParser.TypenameSingleContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TypenameSingle</c>
	/// labeled alternative in <see cref="RecParser.typename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypenameSingle([NotNull] RecParser.TypenameSingleContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>TypenameMany</c>
	/// labeled alternative in <see cref="RecParser.typename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypenameMany([NotNull] RecParser.TypenameManyContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TypenameMany</c>
	/// labeled alternative in <see cref="RecParser.typename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypenameMany([NotNull] RecParser.TypenameManyContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>TypenameGeneric</c>
	/// labeled alternative in <see cref="RecParser.typename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypenameGeneric([NotNull] RecParser.TypenameGenericContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TypenameGeneric</c>
	/// labeled alternative in <see cref="RecParser.typename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypenameGeneric([NotNull] RecParser.TypenameGenericContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>TypenamePointer</c>
	/// labeled alternative in <see cref="RecParser.typename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypenamePointer([NotNull] RecParser.TypenamePointerContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TypenamePointer</c>
	/// labeled alternative in <see cref="RecParser.typename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypenamePointer([NotNull] RecParser.TypenamePointerContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>TypenameArray</c>
	/// labeled alternative in <see cref="RecParser.typename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypenameArray([NotNull] RecParser.TypenameArrayContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TypenameArray</c>
	/// labeled alternative in <see cref="RecParser.typename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypenameArray([NotNull] RecParser.TypenameArrayContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>TypenameFn</c>
	/// labeled alternative in <see cref="RecParser.typename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypenameFn([NotNull] RecParser.TypenameFnContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TypenameFn</c>
	/// labeled alternative in <see cref="RecParser.typename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypenameFn([NotNull] RecParser.TypenameFnContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr([NotNull] RecParser.ExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr([NotNull] RecParser.ExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>AddExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddExpression([NotNull] RecParser.AddExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AddExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddExpression([NotNull] RecParser.AddExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>LogicExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicExpression([NotNull] RecParser.LogicExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LogicExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicExpression([NotNull] RecParser.LogicExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>MemoryExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemoryExpression([NotNull] RecParser.MemoryExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MemoryExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemoryExpression([NotNull] RecParser.MemoryExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>UnaryExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryExpression([NotNull] RecParser.UnaryExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UnaryExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryExpression([NotNull] RecParser.UnaryExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>CompareExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompareExpression([NotNull] RecParser.CompareExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>CompareExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompareExpression([NotNull] RecParser.CompareExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>CallExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCallExpression([NotNull] RecParser.CallExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>CallExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCallExpression([NotNull] RecParser.CallExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>MulExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMulExpression([NotNull] RecParser.MulExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MulExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMulExpression([NotNull] RecParser.MulExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>BitwiseExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBitwiseExpression([NotNull] RecParser.BitwiseExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>BitwiseExpression</c>
	/// labeled alternative in <see cref="RecParser.opExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBitwiseExpression([NotNull] RecParser.BitwiseExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.explicitTemplateInstatiation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExplicitTemplateInstatiation([NotNull] RecParser.ExplicitTemplateInstatiationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.explicitTemplateInstatiation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExplicitTemplateInstatiation([NotNull] RecParser.ExplicitTemplateInstatiationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.callExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCallExpr([NotNull] RecParser.CallExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.callExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCallExpr([NotNull] RecParser.CallExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.structExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStructExpr([NotNull] RecParser.StructExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.structExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStructExpr([NotNull] RecParser.StructExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.structExprAssign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStructExprAssign([NotNull] RecParser.StructExprAssignContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.structExprAssign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStructExprAssign([NotNull] RecParser.StructExprAssignContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.dotComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDotComponent([NotNull] RecParser.DotComponentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.dotComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDotComponent([NotNull] RecParser.DotComponentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.dotExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDotExpr([NotNull] RecParser.DotExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.dotExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDotExpr([NotNull] RecParser.DotExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.termExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTermExpr([NotNull] RecParser.TermExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.termExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTermExpr([NotNull] RecParser.TermExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral([NotNull] RecParser.LiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral([NotNull] RecParser.LiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RecParser.boolLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolLiteral([NotNull] RecParser.BoolLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RecParser.boolLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolLiteral([NotNull] RecParser.BoolLiteralContext context);
}
