//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from highc.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="highcParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface IhighcListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="highcParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] highcParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="highcParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] highcParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="highcParser.top_level_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTop_level_statement([NotNull] highcParser.Top_level_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="highcParser.top_level_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTop_level_statement([NotNull] highcParser.Top_level_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="highcParser.mod_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMod_statement([NotNull] highcParser.Mod_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="highcParser.mod_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMod_statement([NotNull] highcParser.Mod_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="highcParser.use_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUse_statement([NotNull] highcParser.Use_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="highcParser.use_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUse_statement([NotNull] highcParser.Use_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="highcParser.template_header"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTemplate_header([NotNull] highcParser.Template_headerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="highcParser.template_header"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTemplate_header([NotNull] highcParser.Template_headerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="highcParser.struct_define_field"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStruct_define_field([NotNull] highcParser.Struct_define_fieldContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="highcParser.struct_define_field"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStruct_define_field([NotNull] highcParser.Struct_define_fieldContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="highcParser.struct_define"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStruct_define([NotNull] highcParser.Struct_defineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="highcParser.struct_define"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStruct_define([NotNull] highcParser.Struct_defineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="highcParser.fn_define_argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFn_define_argument([NotNull] highcParser.Fn_define_argumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="highcParser.fn_define_argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFn_define_argument([NotNull] highcParser.Fn_define_argumentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="highcParser.fn_define"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFn_define([NotNull] highcParser.Fn_defineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="highcParser.fn_define"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFn_define([NotNull] highcParser.Fn_defineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="highcParser.alias_define"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlias_define([NotNull] highcParser.Alias_defineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="highcParser.alias_define"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlias_define([NotNull] highcParser.Alias_defineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="highcParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] highcParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="highcParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] highcParser.BlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="highcParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] highcParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="highcParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] highcParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="highcParser.return_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturn_statement([NotNull] highcParser.Return_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="highcParser.return_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturn_statement([NotNull] highcParser.Return_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="highcParser.defer_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefer_statement([NotNull] highcParser.Defer_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="highcParser.defer_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefer_statement([NotNull] highcParser.Defer_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="highcParser.if_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf_statement([NotNull] highcParser.If_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="highcParser.if_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf_statement([NotNull] highcParser.If_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="highcParser.if_tail_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf_tail_statement([NotNull] highcParser.If_tail_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="highcParser.if_tail_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf_tail_statement([NotNull] highcParser.If_tail_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="highcParser.while_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhile_statement([NotNull] highcParser.While_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="highcParser.while_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhile_statement([NotNull] highcParser.While_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="highcParser.assign_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssign_statement([NotNull] highcParser.Assign_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="highcParser.assign_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssign_statement([NotNull] highcParser.Assign_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="highcParser.let_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLet_expression([NotNull] highcParser.Let_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="highcParser.let_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLet_expression([NotNull] highcParser.Let_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="highcParser.let_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLet_statement([NotNull] highcParser.Let_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="highcParser.let_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLet_statement([NotNull] highcParser.Let_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="highcParser.typename_fn_args"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypename_fn_args([NotNull] highcParser.Typename_fn_argsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="highcParser.typename_fn_args"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypename_fn_args([NotNull] highcParser.Typename_fn_argsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>TypenameMany</c>
	/// labeled alternative in <see cref="highcParser.typename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypenameMany([NotNull] highcParser.TypenameManyContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TypenameMany</c>
	/// labeled alternative in <see cref="highcParser.typename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypenameMany([NotNull] highcParser.TypenameManyContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>TypenameGeneric</c>
	/// labeled alternative in <see cref="highcParser.typename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypenameGeneric([NotNull] highcParser.TypenameGenericContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TypenameGeneric</c>
	/// labeled alternative in <see cref="highcParser.typename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypenameGeneric([NotNull] highcParser.TypenameGenericContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>TypenameFn</c>
	/// labeled alternative in <see cref="highcParser.typename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypenameFn([NotNull] highcParser.TypenameFnContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TypenameFn</c>
	/// labeled alternative in <see cref="highcParser.typename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypenameFn([NotNull] highcParser.TypenameFnContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>TypenameArray</c>
	/// labeled alternative in <see cref="highcParser.typename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypenameArray([NotNull] highcParser.TypenameArrayContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TypenameArray</c>
	/// labeled alternative in <see cref="highcParser.typename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypenameArray([NotNull] highcParser.TypenameArrayContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>TypenameSingle</c>
	/// labeled alternative in <see cref="highcParser.typename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypenameSingle([NotNull] highcParser.TypenameSingleContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TypenameSingle</c>
	/// labeled alternative in <see cref="highcParser.typename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypenameSingle([NotNull] highcParser.TypenameSingleContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>TypenamePointer</c>
	/// labeled alternative in <see cref="highcParser.typename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypenamePointer([NotNull] highcParser.TypenamePointerContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TypenamePointer</c>
	/// labeled alternative in <see cref="highcParser.typename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypenamePointer([NotNull] highcParser.TypenamePointerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="highcParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] highcParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="highcParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] highcParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>AddExpression</c>
	/// labeled alternative in <see cref="highcParser.op_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddExpression([NotNull] highcParser.AddExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AddExpression</c>
	/// labeled alternative in <see cref="highcParser.op_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddExpression([NotNull] highcParser.AddExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>LogicExpression</c>
	/// labeled alternative in <see cref="highcParser.op_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicExpression([NotNull] highcParser.LogicExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LogicExpression</c>
	/// labeled alternative in <see cref="highcParser.op_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicExpression([NotNull] highcParser.LogicExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>MemoryExpression</c>
	/// labeled alternative in <see cref="highcParser.op_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemoryExpression([NotNull] highcParser.MemoryExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MemoryExpression</c>
	/// labeled alternative in <see cref="highcParser.op_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemoryExpression([NotNull] highcParser.MemoryExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>UnaryExpression</c>
	/// labeled alternative in <see cref="highcParser.op_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryExpression([NotNull] highcParser.UnaryExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UnaryExpression</c>
	/// labeled alternative in <see cref="highcParser.op_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryExpression([NotNull] highcParser.UnaryExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>CompareExpression</c>
	/// labeled alternative in <see cref="highcParser.op_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompareExpression([NotNull] highcParser.CompareExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>CompareExpression</c>
	/// labeled alternative in <see cref="highcParser.op_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompareExpression([NotNull] highcParser.CompareExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>CallExpression</c>
	/// labeled alternative in <see cref="highcParser.op_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCallExpression([NotNull] highcParser.CallExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>CallExpression</c>
	/// labeled alternative in <see cref="highcParser.op_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCallExpression([NotNull] highcParser.CallExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>MulExpression</c>
	/// labeled alternative in <see cref="highcParser.op_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMulExpression([NotNull] highcParser.MulExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MulExpression</c>
	/// labeled alternative in <see cref="highcParser.op_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMulExpression([NotNull] highcParser.MulExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>BitwiseExpression</c>
	/// labeled alternative in <see cref="highcParser.op_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBitwiseExpression([NotNull] highcParser.BitwiseExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>BitwiseExpression</c>
	/// labeled alternative in <see cref="highcParser.op_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBitwiseExpression([NotNull] highcParser.BitwiseExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="highcParser.explicit_template_instantiation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExplicit_template_instantiation([NotNull] highcParser.Explicit_template_instantiationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="highcParser.explicit_template_instantiation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExplicit_template_instantiation([NotNull] highcParser.Explicit_template_instantiationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="highcParser.call_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCall_expression([NotNull] highcParser.Call_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="highcParser.call_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCall_expression([NotNull] highcParser.Call_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="highcParser.struct_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStruct_expression([NotNull] highcParser.Struct_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="highcParser.struct_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStruct_expression([NotNull] highcParser.Struct_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="highcParser.struct_expression_set"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStruct_expression_set([NotNull] highcParser.Struct_expression_setContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="highcParser.struct_expression_set"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStruct_expression_set([NotNull] highcParser.Struct_expression_setContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="highcParser.dot_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDot_expression([NotNull] highcParser.Dot_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="highcParser.dot_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDot_expression([NotNull] highcParser.Dot_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="highcParser.term_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerm_expression([NotNull] highcParser.Term_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="highcParser.term_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerm_expression([NotNull] highcParser.Term_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="highcParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral([NotNull] highcParser.LiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="highcParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral([NotNull] highcParser.LiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="highcParser.boolean_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolean_literal([NotNull] highcParser.Boolean_literalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="highcParser.boolean_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolean_literal([NotNull] highcParser.Boolean_literalContext context);
}
